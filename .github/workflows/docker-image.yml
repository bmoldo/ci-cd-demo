name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: 070503547773.dkr.ecr.eu-central-1.amazonaws.com
        ECR_REPOSITORY: ci-cd-demo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

    - name: Deploy to EC2
      env:
        SSH_KEY: ${{ secrets.BMOLDO_KEY }}
        EC2_IP: 18.197.29.1
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $EC2_IP >> ~/.ssh/known_hosts
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@$EC2_IP << 'ENDSSH'
        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 070503547773.dkr.ecr.eu-central-1.amazonaws.com
        docker pull 070503547773.dkr.ecr.eu-central-1.amazonaws.com/ci-cd-demo:latest
        docker stop web || true
        sleep 10
        docker rm web || true
        sleep 10
        docker run --name web -d -p 3000:3000 070503547773.dkr.ecr.eu-central-1.amazonaws.com/ci-cd-demo:latest
        ENDSSH
